---
layout: post
title:  "**My First CLI Data Gem**"
date:   2016-06-18 12:32:04 +0000
---


So its been about 5 months since starting the full stack course. Of course having the laptop i started the course on actually die on me (RIP) didnt help, but here I am putting some finishing touches on my first CLI Scraper Gem. It was one of those projects i dreaded as i approached it. Scraping is a fickle beast, which requires a high degree of intimacy with the the data being scraped and I've had some challenges with prior lessons/labs in this particular area. So in other words I was expecting to be completely stuck on this lab for 2 or more weeks. 2 more weeks of pounding my head on my desk, praying to the programming gods that a "Mr Magoo" moment would take place (I have a knack for unintentionally sorting out issues). 

Starting a project from scratch is pretty daunting at first. Especially for the first time. Its kind of like taking a long road trip to a place you've never been before, plotting your course on a map, then taking that map and throwing it out the window, and turning your headlights off. hoping that what you learned from the map gets you to your destination. Fun huh?

Well, to my delight, The CLI Gem tutorial video made this way easier to grasp and understand, and was invaluable. So I watched closely, and applied what I watched to my own project: a gem I call "ClubHopper". Conceptually speaking it was simple. Create a Gem that scrapes upcoming event info from 2 nightclub websites. So I proceeded to stub out my structure and interface, added all of the dependencies needed, and began to write out my program, which for the most part is pretty straightforward. I initially stubbed this program out so that the program lists the weekend's events and the user selects an index number to get more info on the upcoming event. With the mocked up info I used everything seemed easy to make and was easy to figure out from the users perspective.  Easy enough, right? Sure! That is, until it came the actual scraping. Scraping data from a site is a concept that can be easy to learn but very diffficult to master. As I started to pick out the specific selectors for the events I wanted info on (Friday and Saturday night), I ran into difficulty when dealing with these specific websites. Each site was formatted differently grouping certain pieces of content so using the same exact methods for scraping wasnt feasible. So some of the sites just couldn't be properly scraped at all and I had to go through other nightclub sites that appeared to be easier to deal with. But as I forged ahead, I managed to figure out how to grab the right selectors to pinpoint and scrape the specific content needed for this gem. 

So , after I rejoiced in the fact that maybe, just maybe I'm getting better at scraping, and that things are starting to really come together, bam!. Another brick wall: how do I structure this better so that the user can easily pinpoint which venue and what night during the weekend? Additionally, since essentially I am creating (list) methods for each day to grab the events from each club, when the events are listed, each event is indexed with the number 1. Not good. At one point I actually considered scrapping the program to do something "easier" and after speaking to a few fellow students and a couple of Learn staffers (Adam King in particular was a huge help) about some suggestions (conceptually), I took a step back, created a separate file for each club, and rewrote the bulk of the program in an effort to keep things as simple and clean as possible. Simple? Yes. Effective? Yes. Its a start, and I know as time goes on I'll be able to make more sophisticated applications. All in all this was by far my favorite lab in the whole course even though it was tricky ( did say that it would take me 2 weeks right?). Working on this project really made me feel like its all starting to come together. What I learned from this lab is that going forward I really need to take more time conceptualizing what I'm trying to create, and what possible hurdles may get in the way. Sticking with this project and not scrapping it was a big thing for me. Forging ahead and doing everything I can to come to a working solution made this experience even more gratifying.   

'Till next time...
